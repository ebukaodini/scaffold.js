name: Release and Publish to NPM
on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json  
          npm install

      - name: Lint
        run: npm run lint

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1

      - name: Get latest tag
        id: get_latest_tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        with:
          semver_only: true
          initial_version: "v${{ steps.extract_version.outputs.version }}"

      - name: See if version changed
        run: |
          if [[ "v${{ steps.extract_version.outputs.version }}" == "${{ steps.get_latest_tag.outputs.tag }}" ]]; then
            echo "VERSION_CHANGED=false" >> "$GITHUB_ENV"
          else
            echo "VERSION_CHANGED=true" >> "$GITHUB_ENV"
          fi

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        if: env.VERSION_CHANGED == 'true'
        with:
          tag: "v${{ steps.extract_version.outputs.version }}"

      - name: Create release
        if: env.VERSION_CHANGED == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.extract_version.outputs.version }}"
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: npm publish --access public --registry=https://registry.npmjs.org/ --tag latest --npm-token=${{ secrets.NPM_TOKEN }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
