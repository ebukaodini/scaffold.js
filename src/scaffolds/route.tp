import express from "express";
import { {{resource.singular.pascalCase}}Controller } from "../controllers/{{resource.singular.lowerCase}}.controller";
import { {{resource.singular.pascalCase}}Dto } from "../dtos/{{resource.singular.lowerCase}}.dto";
import { validator } from "../middlewares";

const {{resource.singular.camelCase}}Routes = express.Router();

{{resource.singular.camelCase}}Routes.post("/{{resource.plural.lowerCase}}", validator({{resource.singular.pascalCase}}Dto, "create"), {{resource.singular.pascalCase}}Controller.create{{resource.singular.pascalCase}});
{{resource.singular.camelCase}}Routes.get("/{{resource.plural.lowerCase}}", {{resource.singular.pascalCase}}Controller.findAll{{resource.plural.pascalCase}});
{{resource.singular.camelCase}}Routes.get("/{{resource.plural.lowerCase}}/:{{resource.singular.camelCase}}Id", {{resource.singular.pascalCase}}Controller.findOne{{resource.singular.pascalCase}});
{{resource.singular.camelCase}}Routes.patch("/{{resource.plural.lowerCase}}/:{{resource.singular.camelCase}}Id", validator({{resource.singular.pascalCase}}Dto, "update"), {{resource.singular.pascalCase}}Controller.update{{resource.singular.pascalCase}});
{{resource.singular.camelCase}}Routes.delete("/{{resource.plural.lowerCase}}/:{{resource.singular.camelCase}}Id", {{resource.singular.pascalCase}}Controller.delete{{resource.singular.pascalCase}});

export default {{resource.singular.camelCase}}Routes;
