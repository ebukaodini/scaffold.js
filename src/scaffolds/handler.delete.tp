import "reflect-metadata";
import {
  APIGatewayProxyEvent,
  APIGatewayProxyResult,
  Context,
} from "aws-lambda";
import { response } from "../../middlewares";
import { {{resource.singular.pascalCase}}Dto } from "../../dtos/{{resource.singular.lowerCase}}.dto";
import { {{resource.singular.pascalCase}}Repo } from "../../repos/{{resource.singular.lowerCase}}.repo";

export const handler = async (
  event: APIGatewayProxyEvent,
  _context: Context
): Promise<APIGatewayProxyResult> => {
  try {
    const {{resource.singular.camelCase}} = await {{resource.singular.pascalCase}}Repo.delete(event.pathParameters.{{resource.singular.camelCase}}Id);
    return response.success("{{resource.singular.sentenceCase.spaceCase}} deleted.", {{resource.singular.pascalCase}}Dto.toJson({{resource.singular.camelCase}}));
  } catch (error: any) {
    return response.error("{{resource.singular.sentenceCase.spaceCase}} not deleted!", error.message);
  }
};
